---
import type { GetStaticPaths } from "astro";
import en from "@i18n/ui/en";
import es from "@i18n/ui/es";
import { locales } from "@i18n/utils";
import { getCollection } from "astro:content";
import BlogLayout from "@layouts/BlogLayout.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const blogs = await getCollection("blogs");

  return Object.keys(locales).flatMap((lang) => {
    const filtered = blogs.filter((post) => post.id.startsWith(`${lang}/`));
    const categories = Array.from(
      new Set(filtered.flatMap((post) => post.data.tag)),
    );
    return paginate(filtered, {
      params: { lang },
      props: { categories },
      pageSize: 8,
    });
  });
}) satisfies GetStaticPaths;

const currentLang = Astro.currentLocale as keyof typeof locales;
const translations = { en, es };
const t = translations[currentLang]["blog"];

const { pathname } = Astro.url;
const { page, categories } = Astro.props;

const { data, currentPage, lastPage, url } = page;
const featuredPosts = data.slice(0, 2);
const blogPosts = data.slice(2);
---

<BlogLayout
  t={t}
  currentLocale={currentLang}
  pathname={pathname}
  categories={categories}
  featuredBlogs={featuredPosts}
  blogs={blogPosts}
  page={{ currentPage, lastPage, url }}
/>
